{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = InputField;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _jsxFileName = \"/home/ueslei/Documentos/GitHub/Crudlogin/src/components/InputField.js\";\n\nfunction InputField(_ref) {\n  var label = _ref.label,\n      icon = _ref.icon,\n      inputType = _ref.inputType,\n      keyboardType = _ref.keyboardType,\n      fieldButtonLabel = _ref.fieldButtonLabel,\n      fieldButtonFunction = _ref.fieldButtonFunction;\n  return _react.default.createElement(_reactNative.View, {\n    style: {\n      flexDirection: 'row',\n      borderBottomColor: '#ccc',\n      borderBottomWidth: 1,\n      paddingBottom: 8,\n      marginBottom: 25\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, icon, inputType == 'password' ? _react.default.createElement(_reactNative.TextInput, {\n    placeholder: label,\n    keyboardType: keyboardType,\n    style: {\n      flex: 1,\n      paddingVertical: 0\n    },\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }) : _react.default.createElement(_reactNative.TextInput, {\n    placeholder: label,\n    keyboardType: keyboardType,\n    style: {\n      flex: 1,\n      paddingVertical: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_reactNative.TouchableOpacity, {\n    onPress: fieldButtonFunction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: {\n      color: '#AD40AF',\n      fontWeight: '700'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, fieldButtonLabel)));\n}","map":{"version":3,"sources":["/home/ueslei/Documentos/GitHub/Crudlogin/src/components/InputField.js"],"names":["InputField","label","icon","inputType","keyboardType","fieldButtonLabel","fieldButtonFunction","flexDirection","borderBottomColor","borderBottomWidth","paddingBottom","marginBottom","flex","paddingVertical","color","fontWeight"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEe,SAASA,UAAT,OAOZ;AAAA,MANDC,KAMC,QANDA,KAMC;AAAA,MALDC,IAKC,QALDA,IAKC;AAAA,MAJDC,SAIC,QAJDA,SAIC;AAAA,MAHDC,YAGC,QAHDA,YAGC;AAAA,MAFDC,gBAEC,QAFDA,gBAEC;AAAA,MADDC,mBACC,QADDA,mBACC;AACD,SACE,6BAAC,iBAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,aAAa,EAAE,KADV;AAELC,MAAAA,iBAAiB,EAAE,MAFd;AAGLC,MAAAA,iBAAiB,EAAE,CAHd;AAILC,MAAAA,aAAa,EAAE,CAJV;AAKLC,MAAAA,YAAY,EAAE;AALT,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGT,IARH,EASGC,SAAS,IAAI,UAAb,GACC,6BAAC,sBAAD;AACE,IAAA,WAAW,EAAEF,KADf;AAEE,IAAA,YAAY,EAAEG,YAFhB;AAGE,IAAA,KAAK,EAAE;AAACQ,MAAAA,IAAI,EAAE,CAAP;AAAUC,MAAAA,eAAe,EAAE;AAA3B,KAHT;AAIE,IAAA,eAAe,EAAE,IAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAQC,6BAAC,sBAAD;AACE,IAAA,WAAW,EAAEZ,KADf;AAEE,IAAA,YAAY,EAAEG,YAFhB;AAGE,IAAA,KAAK,EAAE;AAACQ,MAAAA,IAAI,EAAE,CAAP;AAAUC,MAAAA,eAAe,EAAE;AAA3B,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBJ,EAuBE,6BAAC,6BAAD;AAAkB,IAAA,OAAO,EAAEP,mBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE;AAACQ,MAAAA,KAAK,EAAE,SAAR;AAAmBC,MAAAA,UAAU,EAAE;AAA/B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqDV,gBAArD,CADF,CAvBF,CADF;AA6BD","sourcesContent":["import React from 'react';\nimport {View, Text, TouchableOpacity, TextInput} from 'react-native';\n\nexport default function InputField({\n  label,\n  icon,\n  inputType,\n  keyboardType,\n  fieldButtonLabel,\n  fieldButtonFunction,\n}) {\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        borderBottomColor: '#ccc',\n        borderBottomWidth: 1,\n        paddingBottom: 8,\n        marginBottom: 25,\n      }}>\n      {icon}\n      {inputType == 'password' ? (\n        <TextInput\n          placeholder={label}\n          keyboardType={keyboardType}\n          style={{flex: 1, paddingVertical: 0}}\n          secureTextEntry={true}\n        />\n      ) : (\n        <TextInput\n          placeholder={label}\n          keyboardType={keyboardType}\n          style={{flex: 1, paddingVertical: 0}}\n        />\n      )}\n      <TouchableOpacity onPress={fieldButtonFunction}>\n        <Text style={{color: '#AD40AF', fontWeight: '700'}}>{fieldButtonLabel}</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"script"}