{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = SafeAreaProviderCompat;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar _Dimensions$get = _reactNative.Dimensions.get('window'),\n    _Dimensions$get$width = _Dimensions$get.width,\n    width = _Dimensions$get$width === void 0 ? 0 : _Dimensions$get$width,\n    _Dimensions$get$heigh = _Dimensions$get.height,\n    height = _Dimensions$get$heigh === void 0 ? 0 : _Dimensions$get$heigh;\n\nvar initialMetrics = _reactNative.Platform.OS === 'web' || _reactNativeSafeAreaContext.initialWindowMetrics == null ? {\n  frame: {\n    x: 0,\n    y: 0,\n    width: width,\n    height: height\n  },\n  insets: {\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n} : _reactNativeSafeAreaContext.initialWindowMetrics;\n\nfunction SafeAreaProviderCompat(_ref) {\n  var children = _ref.children,\n      style = _ref.style;\n  return React.createElement(_reactNativeSafeAreaContext.SafeAreaInsetsContext.Consumer, null, function (insets) {\n    if (insets) {\n      return React.createElement(_reactNative.View, {\n        style: [styles.container, style]\n      }, children);\n    }\n\n    return React.createElement(_reactNativeSafeAreaContext.SafeAreaProvider, {\n      initialMetrics: initialMetrics,\n      style: style\n    }, children);\n  });\n}\n\nSafeAreaProviderCompat.initialMetrics = initialMetrics;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/home/ueslei/Documentos/GitHub/Crudlogin/node_modules/@react-navigation/bottom-tabs/node_modules/@react-navigation/elements/lib/module/SafeAreaProviderCompat.js"],"names":["Dimensions","get","width","height","initialMetrics","Platform","OS","initialWindowMetrics","frame","x","y","insets","top","left","right","bottom","SafeAreaProviderCompat","children","style","React","createElement","SafeAreaInsetsContext","Consumer","View","styles","container","SafeAreaProvider","StyleSheet","create","flex"],"mappings":";;;;;AAAA;;AACA;;AACA;;;;;;AACA,sBAGIA,wBAAWC,GAAX,CAAe,QAAf,CAHJ;AAAA,4CACEC,KADF;AAAA,IACEA,KADF,sCACU,CADV;AAAA,4CAEEC,MAFF;AAAA,IAEEA,MAFF,sCAEW,CAFX;;AAOA,IAAMC,cAAc,GAAGC,sBAASC,EAAT,KAAgB,KAAhB,IAAyBC,oDAAwB,IAAjD,GAAwD;AAC7EC,EAAAA,KAAK,EAAE;AACLC,IAAAA,CAAC,EAAE,CADE;AAELC,IAAAA,CAAC,EAAE,CAFE;AAGLR,IAAAA,KAAK,EAALA,KAHK;AAILC,IAAAA,MAAM,EAANA;AAJK,GADsE;AAO7EQ,EAAAA,MAAM,EAAE;AACNC,IAAAA,GAAG,EAAE,CADC;AAENC,IAAAA,IAAI,EAAE,CAFA;AAGNC,IAAAA,KAAK,EAAE,CAHD;AAINC,IAAAA,MAAM,EAAE;AAJF;AAPqE,CAAxD,GAanBR,gDAbJ;;AAce,SAASS,sBAAT,OAGZ;AAAA,MAFDC,QAEC,QAFDA,QAEC;AAAA,MADDC,KACC,QADDA,KACC;AACD,SAAoBC,KAAK,CAACC,aAAN,CAAoBC,kDAAsBC,QAA1C,EAAoD,IAApD,EAA0D,UAAAX,MAAM,EAAI;AACtF,QAAIA,MAAJ,EAAY;AAIV,aAAoBQ,KAAK,CAACC,aAAN,CAAoBG,iBAApB,EAA0B;AAC5CL,QAAAA,KAAK,EAAE,CAACM,MAAM,CAACC,SAAR,EAAmBP,KAAnB;AADqC,OAA1B,EAEjBD,QAFiB,CAApB;AAGD;;AAED,WAAoBE,KAAK,CAACC,aAAN,CAAoBM,4CAApB,EAAsC;AACxDtB,MAAAA,cAAc,EAAEA,cADwC;AAExDc,MAAAA,KAAK,EAAEA;AAFiD,KAAtC,EAGjBD,QAHiB,CAApB;AAID,GAdmB,CAApB;AAeD;;AACDD,sBAAsB,CAACZ,cAAvB,GAAwCA,cAAxC;;AACA,IAAMoB,MAAM,GAAGG,wBAAWC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE;AADG;AADoB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { Dimensions, Platform, StyleSheet, View } from 'react-native';\nimport { initialWindowMetrics, SafeAreaInsetsContext, SafeAreaProvider } from 'react-native-safe-area-context';\nconst {\n  width = 0,\n  height = 0\n} = Dimensions.get('window'); // To support SSR on web, we need to have empty insets for initial values\n// Otherwise there can be mismatch between SSR and client output\n// We also need to specify empty values to support tests environments\n\nconst initialMetrics = Platform.OS === 'web' || initialWindowMetrics == null ? {\n  frame: {\n    x: 0,\n    y: 0,\n    width,\n    height\n  },\n  insets: {\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n} : initialWindowMetrics;\nexport default function SafeAreaProviderCompat({\n  children,\n  style\n}) {\n  return /*#__PURE__*/React.createElement(SafeAreaInsetsContext.Consumer, null, insets => {\n    if (insets) {\n      // If we already have insets, don't wrap the stack in another safe area provider\n      // This avoids an issue with updates at the cost of potentially incorrect values\n      // https://github.com/react-navigation/react-navigation/issues/174\n      return /*#__PURE__*/React.createElement(View, {\n        style: [styles.container, style]\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(SafeAreaProvider, {\n      initialMetrics: initialMetrics,\n      style: style\n    }, children);\n  });\n}\nSafeAreaProviderCompat.initialMetrics = initialMetrics;\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\n//# sourceMappingURL=SafeAreaProviderCompat.js.map"]},"metadata":{},"sourceType":"script"}