{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SafeAreaView = SafeAreaView;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _SafeAreaContext = require(\"./SafeAreaContext\");\n\nvar _excluded = [\"style\", \"mode\", \"edges\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar TOP = 8,\n    RIGHT = 4,\n    BOTTOM = 2,\n    LEFT = 1,\n    ALL = 15;\nvar edgeBitmaskMap = {\n  top: TOP,\n  right: RIGHT,\n  bottom: BOTTOM,\n  left: LEFT\n};\n\nfunction SafeAreaView(_ref) {\n  var _ref$style = _ref.style,\n      style = _ref$style === void 0 ? {} : _ref$style,\n      mode = _ref.mode,\n      edges = _ref.edges,\n      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var insets = (0, _SafeAreaContext.useSafeAreaInsets)();\n  var edgeBitmask = edges != null ? edges.reduce(function (accum, edge) {\n    return accum | edgeBitmaskMap[edge];\n  }, 0) : ALL;\n  var appliedStyle = React.useMemo(function () {\n    var insetTop = edgeBitmask & TOP ? insets.top : 0;\n    var insetRight = edgeBitmask & RIGHT ? insets.right : 0;\n    var insetBottom = edgeBitmask & BOTTOM ? insets.bottom : 0;\n    var insetLeft = edgeBitmask & LEFT ? insets.left : 0;\n\n    var flatStyle = _reactNative.StyleSheet.flatten(style);\n\n    if (mode === 'margin') {\n      var _flatStyle$margin = flatStyle.margin,\n          margin = _flatStyle$margin === void 0 ? 0 : _flatStyle$margin,\n          _flatStyle$marginVert = flatStyle.marginVertical,\n          marginVertical = _flatStyle$marginVert === void 0 ? margin : _flatStyle$marginVert,\n          _flatStyle$marginHori = flatStyle.marginHorizontal,\n          marginHorizontal = _flatStyle$marginHori === void 0 ? margin : _flatStyle$marginHori,\n          _flatStyle$marginTop = flatStyle.marginTop,\n          marginTop = _flatStyle$marginTop === void 0 ? marginVertical : _flatStyle$marginTop,\n          _flatStyle$marginRigh = flatStyle.marginRight,\n          marginRight = _flatStyle$marginRigh === void 0 ? marginHorizontal : _flatStyle$marginRigh,\n          _flatStyle$marginBott = flatStyle.marginBottom,\n          marginBottom = _flatStyle$marginBott === void 0 ? marginVertical : _flatStyle$marginBott,\n          _flatStyle$marginLeft = flatStyle.marginLeft,\n          marginLeft = _flatStyle$marginLeft === void 0 ? marginHorizontal : _flatStyle$marginLeft;\n      var marginStyle = {\n        marginTop: marginTop + insetTop,\n        marginRight: marginRight + insetRight,\n        marginBottom: marginBottom + insetBottom,\n        marginLeft: marginLeft + insetLeft\n      };\n      return [style, marginStyle];\n    } else {\n      var _flatStyle$padding = flatStyle.padding,\n          padding = _flatStyle$padding === void 0 ? 0 : _flatStyle$padding,\n          _flatStyle$paddingVer = flatStyle.paddingVertical,\n          paddingVertical = _flatStyle$paddingVer === void 0 ? padding : _flatStyle$paddingVer,\n          _flatStyle$paddingHor = flatStyle.paddingHorizontal,\n          paddingHorizontal = _flatStyle$paddingHor === void 0 ? padding : _flatStyle$paddingHor,\n          _flatStyle$paddingTop = flatStyle.paddingTop,\n          paddingTop = _flatStyle$paddingTop === void 0 ? paddingVertical : _flatStyle$paddingTop,\n          _flatStyle$paddingRig = flatStyle.paddingRight,\n          paddingRight = _flatStyle$paddingRig === void 0 ? paddingHorizontal : _flatStyle$paddingRig,\n          _flatStyle$paddingBot = flatStyle.paddingBottom,\n          paddingBottom = _flatStyle$paddingBot === void 0 ? paddingVertical : _flatStyle$paddingBot,\n          _flatStyle$paddingLef = flatStyle.paddingLeft,\n          paddingLeft = _flatStyle$paddingLef === void 0 ? paddingHorizontal : _flatStyle$paddingLef;\n      var paddingStyle = {\n        paddingTop: paddingTop + insetTop,\n        paddingRight: paddingRight + insetRight,\n        paddingBottom: paddingBottom + insetBottom,\n        paddingLeft: paddingLeft + insetLeft\n      };\n      return [style, paddingStyle];\n    }\n  }, [style, insets, mode, edgeBitmask]);\n  return React.createElement(_reactNative.View, _extends({\n    style: appliedStyle\n  }, rest));\n}","map":{"version":3,"sources":["/home/ueslei/Documentos/GitHub/Crudlogin/node_modules/react-native-safe-area-context/lib/module/SafeAreaView.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","TOP","RIGHT","BOTTOM","LEFT","ALL","edgeBitmaskMap","top","right","bottom","left","SafeAreaView","style","mode","edges","rest","insets","edgeBitmask","reduce","accum","edge","appliedStyle","React","useMemo","insetTop","insetRight","insetBottom","insetLeft","flatStyle","StyleSheet","flatten","margin","marginVertical","marginHorizontal","marginTop","marginRight","marginBottom","marginLeft","marginStyle","padding","paddingVertical","paddingHorizontal","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingStyle","createElement","View"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { useSafeAreaInsets } from './SafeAreaContext';\n// prettier-ignore\nconst TOP = 0b1000,\n      RIGHT = 0b0100,\n      BOTTOM = 0b0010,\n      LEFT = 0b0001,\n      ALL = 0b1111;\n/* eslint-disable no-bitwise */\n\nconst edgeBitmaskMap = {\n  top: TOP,\n  right: RIGHT,\n  bottom: BOTTOM,\n  left: LEFT\n};\nexport function SafeAreaView({\n  style = {},\n  mode,\n  edges,\n  ...rest\n}) {\n  const insets = useSafeAreaInsets();\n  const edgeBitmask = edges != null ? edges.reduce((accum, edge) => accum | edgeBitmaskMap[edge], 0) : ALL;\n  const appliedStyle = React.useMemo(() => {\n    const insetTop = edgeBitmask & TOP ? insets.top : 0;\n    const insetRight = edgeBitmask & RIGHT ? insets.right : 0;\n    const insetBottom = edgeBitmask & BOTTOM ? insets.bottom : 0;\n    const insetLeft = edgeBitmask & LEFT ? insets.left : 0;\n    const flatStyle = StyleSheet.flatten(style);\n\n    if (mode === 'margin') {\n      const {\n        margin = 0,\n        marginVertical = margin,\n        marginHorizontal = margin,\n        marginTop = marginVertical,\n        marginRight = marginHorizontal,\n        marginBottom = marginVertical,\n        marginLeft = marginHorizontal\n      } = flatStyle;\n      const marginStyle = {\n        marginTop: marginTop + insetTop,\n        marginRight: marginRight + insetRight,\n        marginBottom: marginBottom + insetBottom,\n        marginLeft: marginLeft + insetLeft\n      };\n      return [style, marginStyle];\n    } else {\n      const {\n        padding = 0,\n        paddingVertical = padding,\n        paddingHorizontal = padding,\n        paddingTop = paddingVertical,\n        paddingRight = paddingHorizontal,\n        paddingBottom = paddingVertical,\n        paddingLeft = paddingHorizontal\n      } = flatStyle;\n      const paddingStyle = {\n        paddingTop: paddingTop + insetTop,\n        paddingRight: paddingRight + insetRight,\n        paddingBottom: paddingBottom + insetBottom,\n        paddingLeft: paddingLeft + insetLeft\n      };\n      return [style, paddingStyle];\n    }\n  }, [style, insets, mode, edgeBitmask]);\n  return /*#__PURE__*/React.createElement(View, _extends({\n    style: appliedStyle\n  }, rest));\n}\n//# sourceMappingURL=SafeAreaView.js.map"]},"metadata":{},"sourceType":"script"}