{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useLinkBuilder;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _core = require(\"@react-navigation/core\");\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _LinkingContext = _interopRequireDefault(require(\"./LinkingContext\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar getRootStateForNavigate = function getRootStateForNavigate(navigation, state) {\n  var parent = navigation.getParent();\n\n  if (parent) {\n    var parentState = parent.getState();\n    return getRootStateForNavigate(parent, {\n      index: 0,\n      routes: [(0, _extends2.default)({}, parentState.routes[parentState.index], {\n        state: state\n      })]\n    });\n  }\n\n  return state;\n};\n\nfunction useLinkBuilder() {\n  var navigation = React.useContext(_core.NavigationHelpersContext);\n  var linking = React.useContext(_LinkingContext.default);\n  var buildLink = React.useCallback(function (name, params) {\n    var options = linking.options;\n\n    if ((options === null || options === void 0 ? void 0 : options.enabled) === false) {\n      return undefined;\n    }\n\n    var state = navigation ? getRootStateForNavigate(navigation, {\n      index: 0,\n      routes: [{\n        name: name,\n        params: params\n      }]\n    }) : {\n      index: 0,\n      routes: [{\n        name: name,\n        params: params\n      }]\n    };\n    var path = options !== null && options !== void 0 && options.getPathFromState ? options.getPathFromState(state, options === null || options === void 0 ? void 0 : options.config) : (0, _core.getPathFromState)(state, options === null || options === void 0 ? void 0 : options.config);\n    return path;\n  }, [linking, navigation]);\n  return buildLink;\n}","map":{"version":3,"sources":["/home/ueslei/Documentos/GitHub/Crudlogin/node_modules/@react-navigation/native/lib/module/useLinkBuilder.js"],"names":["getRootStateForNavigate","navigation","state","parent","getParent","parentState","getState","index","routes","useLinkBuilder","React","useContext","NavigationHelpersContext","linking","LinkingContext","buildLink","useCallback","name","params","options","enabled","undefined","path","getPathFromState","config"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;;;AAEA,IAAMA,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,UAAD,EAAaC,KAAb,EAAuB;AACrD,MAAMC,MAAM,GAAGF,UAAU,CAACG,SAAX,EAAf;;AAEA,MAAID,MAAJ,EAAY;AACV,QAAME,WAAW,GAAGF,MAAM,CAACG,QAAP,EAApB;AACA,WAAON,uBAAuB,CAACG,MAAD,EAAS;AACrCI,MAAAA,KAAK,EAAE,CAD8B;AAErCC,MAAAA,MAAM,EAAE,4BAAMH,WAAW,CAACG,MAAZ,CAAmBH,WAAW,CAACE,KAA/B,CAAN;AACNL,QAAAA,KAAK,EAAEA;AADD;AAF6B,KAAT,CAA9B;AAMD;;AAED,SAAOA,KAAP;AACD,CAdD;;AAqBe,SAASO,cAAT,GAA0B;AACvC,MAAMR,UAAU,GAAGS,KAAK,CAACC,UAAN,CAAiBC,8BAAjB,CAAnB;AACA,MAAMC,OAAO,GAAGH,KAAK,CAACC,UAAN,CAAiBG,uBAAjB,CAAhB;AACA,MAAMC,SAAS,GAAGL,KAAK,CAACM,WAAN,CAAkB,UAACC,IAAD,EAAOC,MAAP,EAAkB;AACpD,QACEC,OADF,GAEIN,OAFJ,CACEM,OADF;;AAIA,QAAI,CAACA,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACC,OAA3D,MAAwE,KAA5E,EAAmF;AACjF,aAAOC,SAAP;AACD;;AAED,QAAMnB,KAAK,GAAGD,UAAU,GAAGD,uBAAuB,CAACC,UAAD,EAAa;AAC7DM,MAAAA,KAAK,EAAE,CADsD;AAE7DC,MAAAA,MAAM,EAAE,CAAC;AACPS,QAAAA,IAAI,EAAJA,IADO;AAEPC,QAAAA,MAAM,EAANA;AAFO,OAAD;AAFqD,KAAb,CAA1B,GAQxB;AACEX,MAAAA,KAAK,EAAE,CADT;AAEEC,MAAAA,MAAM,EAAE,CAAC;AACPS,QAAAA,IAAI,EAAJA,IADO;AAEPC,QAAAA,MAAM,EAANA;AAFO,OAAD;AAFV,KARA;AAeA,QAAMI,IAAI,GAAGH,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,IAA0CA,OAAO,CAACI,gBAAlD,GAAqEJ,OAAO,CAACI,gBAAR,CAAyBrB,KAAzB,EAAgCiB,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACK,MAA1F,CAArE,GAAyK,4BAAiBtB,KAAjB,EAAwBiB,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACK,MAAlF,CAAtL;AACA,WAAOF,IAAP;AACD,GA1BiB,EA0Bf,CAACT,OAAD,EAAUZ,UAAV,CA1Be,CAAlB;AA2BA,SAAOc,SAAP;AACD","sourcesContent":["import { getPathFromState, NavigationHelpersContext } from '@react-navigation/core';\nimport * as React from 'react';\nimport LinkingContext from './LinkingContext';\n\nconst getRootStateForNavigate = (navigation, state) => {\n  const parent = navigation.getParent();\n\n  if (parent) {\n    const parentState = parent.getState();\n    return getRootStateForNavigate(parent, {\n      index: 0,\n      routes: [{ ...parentState.routes[parentState.index],\n        state: state\n      }]\n    });\n  }\n\n  return state;\n};\n/**\n * Build destination link for a navigate action.\n * Useful for showing anchor tags on the web for buttons that perform navigation.\n */\n\n\nexport default function useLinkBuilder() {\n  const navigation = React.useContext(NavigationHelpersContext);\n  const linking = React.useContext(LinkingContext);\n  const buildLink = React.useCallback((name, params) => {\n    const {\n      options\n    } = linking;\n\n    if ((options === null || options === void 0 ? void 0 : options.enabled) === false) {\n      return undefined;\n    }\n\n    const state = navigation ? getRootStateForNavigate(navigation, {\n      index: 0,\n      routes: [{\n        name,\n        params\n      }]\n    }) : // If we couldn't find a navigation object in context, we're at root\n    // So we'll construct a basic state object to use\n    {\n      index: 0,\n      routes: [{\n        name,\n        params\n      }]\n    };\n    const path = options !== null && options !== void 0 && options.getPathFromState ? options.getPathFromState(state, options === null || options === void 0 ? void 0 : options.config) : getPathFromState(state, options === null || options === void 0 ? void 0 : options.config);\n    return path;\n  }, [linking, navigation]);\n  return buildLink;\n}\n//# sourceMappingURL=useLinkBuilder.js.map"]},"metadata":{},"sourceType":"script"}