{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar androidPropTypes = {\n  fadeToColor: _propTypes.default.string,\n  androidVariant: _propTypes.default.oneOf(['iosClone', 'nativeAndroid']),\n  dividerHeight: _propTypes.default.number,\n  is24hourSource: _propTypes.default.oneOf(['locale', 'device'])\n};\nvar iOSPropTypes = {\n  theme: _propTypes.default.oneOf(['light', 'dark', 'auto'])\n};\nvar modalPropTypes = {\n  modal: _propTypes.default.bool,\n  open: _propTypes.default.bool,\n  onConfirm: _propTypes.default.func,\n  onCancel: _propTypes.default.func,\n  confirmText: _propTypes.default.string,\n  cancelText: _propTypes.default.string,\n  title: _propTypes.default.string\n};\n\nvar DateType = _propTypes.default.instanceOf(Date);\n\nvar _default = (0, _extends2.default)({}, _reactNative.Platform === 'android' ? androidPropTypes : iOSPropTypes, {\n  date: DateType.isRequired,\n  onChange: _propTypes.default.func,\n  minimumDate: DateType,\n  maximumDate: DateType,\n  mode: _propTypes.default.oneOf(['date', 'time', 'datetime']),\n  minuteInterval: _propTypes.default.oneOf([1, 2, 3, 4, 5, 6, 10, 12, 15, 20, 30]),\n  locale: _propTypes.default.string,\n  textColor: _propTypes.default.string,\n  timeZoneOffsetInMinutes: _propTypes.default.number,\n  testID: _propTypes.default.string,\n  style: _propTypes.default.any\n}, modalPropTypes);\n\nexports.default = _default;","map":{"version":3,"sources":["/home/ueslei/Documentos/GitHub/Crudlogin/node_modules/react-native-date-picker/src/propTypes.js"],"names":["androidPropTypes","fadeToColor","PropTypes","string","androidVariant","oneOf","dividerHeight","number","is24hourSource","iOSPropTypes","theme","modalPropTypes","modal","bool","open","onConfirm","func","onCancel","confirmText","cancelText","title","DateType","instanceOf","Date","Platform","date","isRequired","onChange","minimumDate","maximumDate","mode","minuteInterval","locale","textColor","timeZoneOffsetInMinutes","testID","style","any"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,gBAAgB,GAAG;AACvBC,EAAAA,WAAW,EAAEC,mBAAUC,MADA;AAEvBC,EAAAA,cAAc,EAAEF,mBAAUG,KAAV,CAAgB,CAAC,UAAD,EAAa,eAAb,CAAhB,CAFO;AAGvBC,EAAAA,aAAa,EAAEJ,mBAAUK,MAHF;AAIvBC,EAAAA,cAAc,EAAEN,mBAAUG,KAAV,CAAgB,CAAC,QAAD,EAAW,QAAX,CAAhB;AAJO,CAAzB;AAOA,IAAMI,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAER,mBAAUG,KAAV,CAAgB,CAAC,OAAD,EAAU,MAAV,EAAkB,MAAlB,CAAhB;AADY,CAArB;AAIA,IAAMM,cAAc,GAAG;AACrBC,EAAAA,KAAK,EAAEV,mBAAUW,IADI;AAErBC,EAAAA,IAAI,EAAEZ,mBAAUW,IAFK;AAGrBE,EAAAA,SAAS,EAAEb,mBAAUc,IAHA;AAIrBC,EAAAA,QAAQ,EAAEf,mBAAUc,IAJC;AAKrBE,EAAAA,WAAW,EAAEhB,mBAAUC,MALF;AAMrBgB,EAAAA,UAAU,EAAEjB,mBAAUC,MAND;AAOrBiB,EAAAA,KAAK,EAAElB,mBAAUC;AAPI,CAAvB;;AAUA,IAAMkB,QAAQ,GAAGnB,mBAAUoB,UAAV,CAAqBC,IAArB,CAAjB;;0CAGMC,0BAAa,SAAb,GAAyBxB,gBAAzB,GAA4CS,Y;AAChDgB,EAAAA,IAAI,EAAEJ,QAAQ,CAACK,U;AACfC,EAAAA,QAAQ,EAAEzB,mBAAUc,I;AACpBY,EAAAA,WAAW,EAAEP,Q;AACbQ,EAAAA,WAAW,EAAER,Q;AACbS,EAAAA,IAAI,EAAE5B,mBAAUG,KAAV,CAAgB,CAAC,MAAD,EAAS,MAAT,EAAiB,UAAjB,CAAhB,C;AACN0B,EAAAA,cAAc,EAAE7B,mBAAUG,KAAV,CAAgB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,EAAnB,EAAuB,EAAvB,EAA2B,EAA3B,EAA+B,EAA/B,EAAmC,EAAnC,CAAhB,C;AAChB2B,EAAAA,MAAM,EAAE9B,mBAAUC,M;AAClB8B,EAAAA,SAAS,EAAE/B,mBAAUC,M;AACrB+B,EAAAA,uBAAuB,EAAEhC,mBAAUK,M;AACnC4B,EAAAA,MAAM,EAAEjC,mBAAUC,M;AAClBiC,EAAAA,KAAK,EAAElC,mBAAUmC;GACd1B,c","sourcesContent":["import { Platform } from 'react-native'\nimport PropTypes from 'prop-types'\n\nconst androidPropTypes = {\n  fadeToColor: PropTypes.string,\n  androidVariant: PropTypes.oneOf(['iosClone', 'nativeAndroid']),\n  dividerHeight: PropTypes.number,\n  is24hourSource: PropTypes.oneOf(['locale', 'device']),\n}\n\nconst iOSPropTypes = {\n  theme: PropTypes.oneOf(['light', 'dark', 'auto']),\n}\n\nconst modalPropTypes = {\n  modal: PropTypes.bool,\n  open: PropTypes.bool,\n  onConfirm: PropTypes.func,\n  onCancel: PropTypes.func,\n  confirmText: PropTypes.string,\n  cancelText: PropTypes.string,\n  title: PropTypes.string,\n}\n\nconst DateType = PropTypes.instanceOf(Date)\n\nexport default {\n  ...(Platform === 'android' ? androidPropTypes : iOSPropTypes),\n  date: DateType.isRequired,\n  onChange: PropTypes.func,\n  minimumDate: DateType,\n  maximumDate: DateType,\n  mode: PropTypes.oneOf(['date', 'time', 'datetime']),\n  minuteInterval: PropTypes.oneOf([1, 2, 3, 4, 5, 6, 10, 12, 15, 20, 30]),\n  locale: PropTypes.string,\n  textColor: PropTypes.string,\n  timeZoneOffsetInMinutes: PropTypes.number,\n  testID: PropTypes.string,\n  style: PropTypes.any,\n  ...modalPropTypes,\n}\n"]},"metadata":{},"sourceType":"script"}