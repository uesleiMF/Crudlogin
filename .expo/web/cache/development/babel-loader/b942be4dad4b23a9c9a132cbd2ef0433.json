{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = CustomSwitch;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _jsxFileName = \"/home/ueslei/Documentos/GitHub/Crudlogin/src/components/CustomSwitch.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction CustomSwitch(_ref) {\n  var selectionMode = _ref.selectionMode,\n      option1 = _ref.option1,\n      option2 = _ref.option2,\n      onSelectSwitch = _ref.onSelectSwitch;\n\n  var _useState = (0, _react.useState)(selectionMode),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      getSelectionMode = _useState2[0],\n      setSelectionMode = _useState2[1];\n\n  var updateSwitchData = function updateSwitchData(value) {\n    setSelectionMode(value);\n    onSelectSwitch(value);\n  };\n\n  return _react.default.createElement(_reactNative.View, {\n    style: {\n      height: 44,\n      width: '100%',\n      backgroundColor: '#e4e4e4',\n      borderRadius: 10,\n      borderColor: '#AD40AF',\n      flexDirection: 'row',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.TouchableOpacity, {\n    activeOpacity: 1,\n    onPress: function onPress() {\n      return updateSwitchData(1);\n    },\n    style: {\n      flex: 1,\n      backgroundColor: getSelectionMode == 1 ? '#AD40AF' : '#e4e4e4',\n      borderRadius: 10,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: {\n      color: getSelectionMode == 1 ? 'white' : '#AD40AF',\n      fontSize: 14,\n      fontFamily: 'Roboto-Medium'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, option1)), _react.default.createElement(_reactNative.TouchableOpacity, {\n    activeOpacity: 1,\n    onPress: function onPress() {\n      return updateSwitchData(2);\n    },\n    style: {\n      flex: 1,\n      backgroundColor: getSelectionMode == 2 ? '#AD40AF' : '#e4e4e4',\n      borderRadius: 10,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: {\n      color: getSelectionMode == 2 ? 'white' : '#AD40AF',\n      fontSize: 14,\n      fontFamily: 'Roboto-Medium'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, option2)));\n}","map":{"version":3,"sources":["/home/ueslei/Documentos/GitHub/Crudlogin/src/components/CustomSwitch.js"],"names":["CustomSwitch","selectionMode","option1","option2","onSelectSwitch","getSelectionMode","setSelectionMode","updateSwitchData","value","height","width","backgroundColor","borderRadius","borderColor","flexDirection","justifyContent","flex","alignItems","color","fontSize","fontFamily"],"mappings":";;;;;;;;;AAAA;;AACA;;;;;;;;AAEe,SAASA,YAAT,OAKZ;AAAA,MAJDC,aAIC,QAJDA,aAIC;AAAA,MAHDC,OAGC,QAHDA,OAGC;AAAA,MAFDC,OAEC,QAFDA,OAEC;AAAA,MADDC,cACC,QADDA,cACC;;AACD,kBAA6C,qBAASH,aAAT,CAA7C;AAAA;AAAA,MAAOI,gBAAP;AAAA,MAAyBC,gBAAzB;;AAEA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,KAAK,EAAI;AAChCF,IAAAA,gBAAgB,CAACE,KAAD,CAAhB;AACAJ,IAAAA,cAAc,CAACI,KAAD,CAAd;AACD,GAHD;;AAKA,SACE,6BAAC,iBAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE,EADH;AAELC,MAAAA,KAAK,EAAE,MAFF;AAGLC,MAAAA,eAAe,EAAE,SAHZ;AAILC,MAAAA,YAAY,EAAE,EAJT;AAKLC,MAAAA,WAAW,EAAE,SALR;AAMLC,MAAAA,aAAa,EAAE,KANV;AAOLC,MAAAA,cAAc,EAAE;AAPX,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,6BAAC,6BAAD;AACE,IAAA,aAAa,EAAE,CADjB;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMR,gBAAgB,CAAC,CAAD,CAAtB;AAAA,KAFX;AAGE,IAAA,KAAK,EAAE;AACLS,MAAAA,IAAI,EAAE,CADD;AAELL,MAAAA,eAAe,EAAEN,gBAAgB,IAAI,CAApB,GAAwB,SAAxB,GAAoC,SAFhD;AAGLO,MAAAA,YAAY,EAAE,EAHT;AAILG,MAAAA,cAAc,EAAE,QAJX;AAKLE,MAAAA,UAAU,EAAE;AALP,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,6BAAC,iBAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAEb,gBAAgB,IAAI,CAApB,GAAwB,OAAxB,GAAkC,SADpC;AAELc,MAAAA,QAAQ,EAAE,EAFL;AAGLC,MAAAA,UAAU,EAAE;AAHP,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGlB,OANH,CAVF,CAVF,EA6BE,6BAAC,6BAAD;AACE,IAAA,aAAa,EAAE,CADjB;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMK,gBAAgB,CAAC,CAAD,CAAtB;AAAA,KAFX;AAGE,IAAA,KAAK,EAAE;AACLS,MAAAA,IAAI,EAAE,CADD;AAELL,MAAAA,eAAe,EAAEN,gBAAgB,IAAI,CAApB,GAAwB,SAAxB,GAAoC,SAFhD;AAGLO,MAAAA,YAAY,EAAE,EAHT;AAILG,MAAAA,cAAc,EAAE,QAJX;AAKLE,MAAAA,UAAU,EAAE;AALP,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,6BAAC,iBAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAEb,gBAAgB,IAAI,CAApB,GAAwB,OAAxB,GAAkC,SADpC;AAELc,MAAAA,QAAQ,EAAE,EAFL;AAGLC,MAAAA,UAAU,EAAE;AAHP,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGjB,OANH,CAVF,CA7BF,CADF;AAmDD","sourcesContent":["import React, {useState} from 'react';\nimport {View, Text, TouchableOpacity} from 'react-native';\n\nexport default function CustomSwitch({\n  selectionMode,\n  option1,\n  option2,\n  onSelectSwitch,\n}) {\n  const [getSelectionMode, setSelectionMode] = useState(selectionMode);\n\n  const updateSwitchData = value => {\n    setSelectionMode(value);\n    onSelectSwitch(value);\n  };\n\n  return (\n    <View\n      style={{\n        height: 44,\n        width: '100%',\n        backgroundColor: '#e4e4e4',\n        borderRadius: 10,\n        borderColor: '#AD40AF',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}>\n      <TouchableOpacity\n        activeOpacity={1}\n        onPress={() => updateSwitchData(1)}\n        style={{\n          flex: 1,\n          backgroundColor: getSelectionMode == 1 ? '#AD40AF' : '#e4e4e4',\n          borderRadius: 10,\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}>\n        <Text\n          style={{\n            color: getSelectionMode == 1 ? 'white' : '#AD40AF',\n            fontSize: 14,\n            fontFamily: 'Roboto-Medium',\n          }}>\n          {option1}\n        </Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        activeOpacity={1}\n        onPress={() => updateSwitchData(2)}\n        style={{\n          flex: 1,\n          backgroundColor: getSelectionMode == 2 ? '#AD40AF' : '#e4e4e4',\n          borderRadius: 10,\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}>\n        <Text\n          style={{\n            color: getSelectionMode == 2 ? 'white' : '#AD40AF',\n            fontSize: 14,\n            fontFamily: 'Roboto-Medium',\n          }}>\n          {option2}\n        </Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"script"}