{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useBackButton;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction useBackButton(ref) {\n  React.useEffect(function () {\n    var subscription = _reactNative.BackHandler.addEventListener('hardwareBackPress', function () {\n      var navigation = ref.current;\n\n      if (navigation == null) {\n        return false;\n      }\n\n      if (navigation.canGoBack()) {\n        navigation.goBack();\n        return true;\n      }\n\n      return false;\n    });\n\n    return function () {\n      return subscription.remove();\n    };\n  }, [ref]);\n}","map":{"version":3,"sources":["/home/ueslei/Documentos/GitHub/Crudlogin/node_modules/@react-navigation/native/lib/module/useBackButton.js"],"names":["useBackButton","ref","React","useEffect","subscription","BackHandler","addEventListener","navigation","current","canGoBack","goBack","remove"],"mappings":";;;;;AAAA;;AACA;;;;;;AACe,SAASA,aAAT,CAAuBC,GAAvB,EAA4B;AACzCC,EAAAA,KAAK,CAACC,SAAN,CAAgB,YAAM;AACpB,QAAMC,YAAY,GAAGC,yBAAYC,gBAAZ,CAA6B,mBAA7B,EAAkD,YAAM;AAC3E,UAAMC,UAAU,GAAGN,GAAG,CAACO,OAAvB;;AAEA,UAAID,UAAU,IAAI,IAAlB,EAAwB;AACtB,eAAO,KAAP;AACD;;AAED,UAAIA,UAAU,CAACE,SAAX,EAAJ,EAA4B;AAC1BF,QAAAA,UAAU,CAACG,MAAX;AACA,eAAO,IAAP;AACD;;AAED,aAAO,KAAP;AACD,KAboB,CAArB;;AAcA,WAAO;AAAA,aAAMN,YAAY,CAACO,MAAb,EAAN;AAAA,KAAP;AACD,GAhBD,EAgBG,CAACV,GAAD,CAhBH;AAiBD","sourcesContent":["import * as React from 'react';\nimport { BackHandler } from 'react-native';\nexport default function useBackButton(ref) {\n  React.useEffect(() => {\n    const subscription = BackHandler.addEventListener('hardwareBackPress', () => {\n      const navigation = ref.current;\n\n      if (navigation == null) {\n        return false;\n      }\n\n      if (navigation.canGoBack()) {\n        navigation.goBack();\n        return true;\n      }\n\n      return false;\n    });\n    return () => subscription.remove();\n  }, [ref]);\n}\n//# sourceMappingURL=useBackButton.js.map"]},"metadata":{},"sourceType":"script"}