{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _jsxFileName = \"/home/ueslei/Documentos/GitHub/Crudlogin/node_modules/react-native-date-picker/src/DatePickerIOS.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar RCTDatePickerIOS = (0, _reactNative.requireNativeComponent)('RNDatePicker');\n\nvar DatePickerIOS = function (_React$Component) {\n  (0, _inherits2.default)(DatePickerIOS, _React$Component);\n\n  var _super = _createSuper(DatePickerIOS);\n\n  function DatePickerIOS() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, DatePickerIOS);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this._picker = null;\n\n    _this._onChange = function (event) {\n      var nativeTimeStamp = event.nativeEvent.timestamp;\n      _this.props.onDateChange && _this.props.onDateChange(new Date(nativeTimeStamp));\n    };\n\n    _this._toIosProps = function (props) {\n      return (0, _extends2.default)({}, props, {\n        style: [styles.datePickerIOS, props.style],\n        date: props.date ? props.date.getTime() : undefined,\n        locale: props.locale ? props.locale : undefined,\n        maximumDate: props.maximumDate ? props.maximumDate.getTime() : undefined,\n        minimumDate: props.minimumDate ? props.minimumDate.getTime() : undefined,\n        theme: props.theme ? props.theme : 'auto'\n      });\n    };\n\n    _this._onConfirm = function (_ref) {\n      var timestamp = _ref.timestamp;\n\n      _this.props.onConfirm(new Date(timestamp));\n    };\n\n    _this._isCurrentlyClosed = function () {\n      return !_this.previousProps || !_this.previousProps.open;\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(DatePickerIOS, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.props.date) {\n        var propsTimeStamp = this.props.date.getTime();\n\n        if (this._picker) {\n          this._picker.setNativeProps({\n            date: propsTimeStamp\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var props = this._toIosProps(this.props);\n\n      var isClosed = this._isCurrentlyClosed();\n\n      this.previousProps = props;\n\n      if (props.modal) {\n        if (props.open && isClosed) {\n          _reactNative.NativeModules.RNDatePickerManager.openPicker(props, this._onConfirm, props.onCancel);\n        }\n\n        return null;\n      }\n\n      return _react.default.createElement(RCTDatePickerIOS, (0, _extends2.default)({\n        key: props.textColor,\n        ref: function ref(picker) {\n          _this2._picker = picker;\n        },\n        onChange: this._onChange,\n        onStartShouldSetResponder: function onStartShouldSetResponder() {\n          return true;\n        },\n        onResponderTerminationRequest: function onResponderTerminationRequest() {\n          return false;\n        }\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n  return DatePickerIOS;\n}(_react.default.Component);\n\nexports.default = DatePickerIOS;\n\nvar styles = _reactNative.StyleSheet.create({\n  datePickerIOS: {\n    height: 216,\n    width: 310\n  }\n});","map":{"version":3,"sources":["/home/ueslei/Documentos/GitHub/Crudlogin/node_modules/react-native-date-picker/src/DatePickerIOS.js"],"names":["RCTDatePickerIOS","DatePickerIOS","_picker","_onChange","event","nativeTimeStamp","nativeEvent","timestamp","props","onDateChange","Date","_toIosProps","style","styles","datePickerIOS","date","getTime","undefined","locale","maximumDate","minimumDate","theme","_onConfirm","onConfirm","_isCurrentlyClosed","previousProps","open","propsTimeStamp","setNativeProps","isClosed","modal","NativeModules","RNDatePickerManager","openPicker","onCancel","textColor","picker","React","Component","StyleSheet","create","height","width"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport {\n  StyleSheet,\n  View,\n  requireNativeComponent,\n  NativeModules,\n} from 'react-native'\n\nconst RCTDatePickerIOS = requireNativeComponent('RNDatePicker')\n\nexport default class DatePickerIOS extends React.Component {\n  _picker = null\n\n  componentDidUpdate() {\n    if (this.props.date) {\n      const propsTimeStamp = this.props.date.getTime()\n      if (this._picker) {\n        this._picker.setNativeProps({\n          date: propsTimeStamp,\n        })\n      }\n    }\n  }\n\n  _onChange = (event) => {\n    const nativeTimeStamp = event.nativeEvent.timestamp\n    this.props.onDateChange &&\n      this.props.onDateChange(new Date(nativeTimeStamp))\n  }\n\n  _toIosProps = (props) => {\n    return {\n      ...props,\n      style: [styles.datePickerIOS, props.style],\n      date: props.date ? props.date.getTime() : undefined,\n      locale: props.locale ? props.locale : undefined,\n      maximumDate: props.maximumDate ? props.maximumDate.getTime() : undefined,\n      minimumDate: props.minimumDate ? props.minimumDate.getTime() : undefined,\n      theme: props.theme ? props.theme : 'auto',\n    }\n  }\n\n  _onConfirm = ({ timestamp }) => {\n    this.props.onConfirm(new Date(timestamp))\n  }\n\n  render() {\n    const props = this._toIosProps(this.props)\n    const isClosed = this._isCurrentlyClosed();\n\n    this.previousProps = props; \n    if (props.modal) {\n      if (props.open && isClosed) {\n        NativeModules.RNDatePickerManager.openPicker(\n          props,\n          this._onConfirm,\n          props.onCancel\n        )\n      }\n      return null\n    }\n\n    return (\n      <RCTDatePickerIOS\n        key={props.textColor} // preventing \"Today\" string keep old text color when text color changes\n        ref={(picker) => {\n          this._picker = picker\n        }}\n        onChange={this._onChange}\n        onStartShouldSetResponder={() => true}\n        onResponderTerminationRequest={() => false}\n        {...props}\n      />\n    )\n  }\n  \n  _isCurrentlyClosed = () => !this.previousProps || !this.previousProps.open\n}\n\nconst styles = StyleSheet.create({\n  datePickerIOS: {\n    height: 216,\n    width: 310,\n  },\n})\n"]},"metadata":{},"sourceType":"script"}