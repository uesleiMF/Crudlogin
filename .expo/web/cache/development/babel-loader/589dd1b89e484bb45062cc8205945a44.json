{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = BottomTabBarItem;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _TabBarIcon = _interopRequireDefault(require(\"./TabBarIcon\"));\n\nvar _excluded = [\"children\", \"style\", \"onPress\", \"to\", \"accessibilityRole\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction BottomTabBarItem(_ref) {\n  var focused = _ref.focused,\n      route = _ref.route,\n      label = _ref.label,\n      icon = _ref.icon,\n      badge = _ref.badge,\n      badgeStyle = _ref.badgeStyle,\n      to = _ref.to,\n      _ref$button = _ref.button,\n      button = _ref$button === void 0 ? function (_ref2) {\n    var children = _ref2.children,\n        style = _ref2.style,\n        _onPress = _ref2.onPress,\n        to = _ref2.to,\n        accessibilityRole = _ref2.accessibilityRole,\n        rest = (0, _objectWithoutProperties2.default)(_ref2, _excluded);\n\n    if (_reactNative.Platform.OS === 'web' && to) {\n      return _react.default.createElement(_native.Link, _extends({}, rest, {\n        to: to,\n        style: [styles.button, style],\n        onPress: function onPress(e) {\n          if (!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && (e.button == null || e.button === 0)) {\n              e.preventDefault();\n              _onPress === null || _onPress === void 0 ? void 0 : _onPress(e);\n            }\n        }\n      }), children);\n    } else {\n      return _react.default.createElement(_reactNative.Pressable, _extends({}, rest, {\n        accessibilityRole: accessibilityRole,\n        onPress: _onPress,\n        style: style\n      }), children);\n    }\n  } : _ref$button,\n      accessibilityLabel = _ref.accessibilityLabel,\n      testID = _ref.testID,\n      onPress = _ref.onPress,\n      onLongPress = _ref.onLongPress,\n      horizontal = _ref.horizontal,\n      customActiveTintColor = _ref.activeTintColor,\n      customInactiveTintColor = _ref.inactiveTintColor,\n      _ref$activeBackground = _ref.activeBackgroundColor,\n      activeBackgroundColor = _ref$activeBackground === void 0 ? 'transparent' : _ref$activeBackground,\n      _ref$inactiveBackgrou = _ref.inactiveBackgroundColor,\n      inactiveBackgroundColor = _ref$inactiveBackgrou === void 0 ? 'transparent' : _ref$inactiveBackgrou,\n      _ref$showLabel = _ref.showLabel,\n      showLabel = _ref$showLabel === void 0 ? true : _ref$showLabel,\n      allowFontScaling = _ref.allowFontScaling,\n      labelStyle = _ref.labelStyle,\n      iconStyle = _ref.iconStyle,\n      style = _ref.style;\n\n  var _useTheme = (0, _native.useTheme)(),\n      colors = _useTheme.colors;\n\n  var activeTintColor = customActiveTintColor === undefined ? colors.primary : customActiveTintColor;\n  var inactiveTintColor = customInactiveTintColor === undefined ? (0, _color.default)(colors.text).mix((0, _color.default)(colors.card), 0.5).hex() : customInactiveTintColor;\n\n  var renderLabel = function renderLabel(_ref3) {\n    var focused = _ref3.focused;\n\n    if (showLabel === false) {\n      return null;\n    }\n\n    var color = focused ? activeTintColor : inactiveTintColor;\n\n    if (typeof label === 'string') {\n      return _react.default.createElement(_reactNative.Text, {\n        numberOfLines: 1,\n        style: [styles.label, {\n          color: color\n        }, horizontal ? styles.labelBeside : styles.labelBeneath, labelStyle],\n        allowFontScaling: allowFontScaling\n      }, label);\n    }\n\n    return label({\n      focused: focused,\n      color: color,\n      position: horizontal ? 'beside-icon' : 'below-icon'\n    });\n  };\n\n  var renderIcon = function renderIcon(_ref4) {\n    var focused = _ref4.focused;\n\n    if (icon === undefined) {\n      return null;\n    }\n\n    var activeOpacity = focused ? 1 : 0;\n    var inactiveOpacity = focused ? 0 : 1;\n    return _react.default.createElement(_TabBarIcon.default, {\n      route: route,\n      horizontal: horizontal,\n      badge: badge,\n      badgeStyle: badgeStyle,\n      activeOpacity: activeOpacity,\n      inactiveOpacity: inactiveOpacity,\n      activeTintColor: activeTintColor,\n      inactiveTintColor: inactiveTintColor,\n      renderIcon: icon,\n      style: iconStyle\n    });\n  };\n\n  var scene = {\n    route: route,\n    focused: focused\n  };\n  var backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;\n  return button({\n    to: to,\n    onPress: onPress,\n    onLongPress: onLongPress,\n    testID: testID,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: _reactNative.Platform.select({\n      ios: 'button',\n      default: 'tab'\n    }),\n    accessibilityState: {\n      selected: focused\n    },\n    accessibilityStates: focused ? ['selected'] : [],\n    style: [styles.tab, {\n      backgroundColor: backgroundColor\n    }, horizontal ? styles.tabLandscape : styles.tabPortrait, style],\n    children: _react.default.createElement(_react.default.Fragment, null, renderIcon(scene), renderLabel(scene))\n  });\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  tab: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column'\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent'\n  },\n  labelBeneath: {\n    fontSize: 10\n  },\n  labelBeside: {\n    fontSize: 13,\n    marginLeft: 20,\n    marginTop: 3\n  },\n  button: {\n    display: 'flex'\n  }\n});","map":{"version":3,"sources":["/home/ueslei/Documentos/GitHub/Crudlogin/node_modules/@react-navigation/bottom-tabs/lib/module/views/BottomTabItem.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","BottomTabBarItem","focused","route","label","icon","badge","badgeStyle","to","button","children","style","onPress","accessibilityRole","rest","Platform","OS","React","createElement","Link","styles","e","metaKey","altKey","ctrlKey","shiftKey","preventDefault","Pressable","accessibilityLabel","testID","onLongPress","horizontal","customActiveTintColor","activeTintColor","customInactiveTintColor","inactiveTintColor","activeBackgroundColor","inactiveBackgroundColor","showLabel","allowFontScaling","labelStyle","iconStyle","colors","undefined","primary","text","mix","card","hex","renderLabel","color","Text","numberOfLines","labelBeside","labelBeneath","position","renderIcon","activeOpacity","inactiveOpacity","TabBarIcon","scene","backgroundColor","select","ios","default","accessibilityState","selected","accessibilityStates","tab","tabLandscape","tabPortrait","Fragment","StyleSheet","create","flex","alignItems","justifyContent","flexDirection","textAlign","fontSize","marginLeft","marginTop","display"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { Link, useTheme } from '@react-navigation/native';\nimport Color from 'color';\nimport React from 'react';\nimport { Platform, Pressable, StyleSheet, Text } from 'react-native';\nimport TabBarIcon from './TabBarIcon';\nexport default function BottomTabBarItem({\n  focused,\n  route,\n  label,\n  icon,\n  badge,\n  badgeStyle,\n  to,\n  button = ({\n    children,\n    style,\n    onPress,\n    to,\n    accessibilityRole,\n    ...rest\n  }) => {\n    if (Platform.OS === 'web' && to) {\n      // React Native Web doesn't forward `onClick` if we use `TouchableWithoutFeedback`.\n      // We need to use `onClick` to be able to prevent default browser handling of links.\n      return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n        to: to,\n        style: [styles.button, style],\n        onPress: e => {\n          if (!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && (e.button == null || e.button === 0) // ignore everything but left clicks\n          ) {\n            e.preventDefault();\n            onPress === null || onPress === void 0 ? void 0 : onPress(e);\n          }\n        }\n      }), children);\n    } else {\n      return /*#__PURE__*/React.createElement(Pressable, _extends({}, rest, {\n        accessibilityRole: accessibilityRole,\n        onPress: onPress,\n        style: style\n      }), children);\n    }\n  },\n  accessibilityLabel,\n  testID,\n  onPress,\n  onLongPress,\n  horizontal,\n  activeTintColor: customActiveTintColor,\n  inactiveTintColor: customInactiveTintColor,\n  activeBackgroundColor = 'transparent',\n  inactiveBackgroundColor = 'transparent',\n  showLabel = true,\n  allowFontScaling,\n  labelStyle,\n  iconStyle,\n  style\n}) {\n  const {\n    colors\n  } = useTheme();\n  const activeTintColor = customActiveTintColor === undefined ? colors.primary : customActiveTintColor;\n  const inactiveTintColor = customInactiveTintColor === undefined ? Color(colors.text).mix(Color(colors.card), 0.5).hex() : customInactiveTintColor;\n\n  const renderLabel = ({\n    focused\n  }) => {\n    if (showLabel === false) {\n      return null;\n    }\n\n    const color = focused ? activeTintColor : inactiveTintColor;\n\n    if (typeof label === 'string') {\n      return /*#__PURE__*/React.createElement(Text, {\n        numberOfLines: 1,\n        style: [styles.label, {\n          color\n        }, horizontal ? styles.labelBeside : styles.labelBeneath, labelStyle],\n        allowFontScaling: allowFontScaling\n      }, label);\n    }\n\n    return label({\n      focused,\n      color,\n      position: horizontal ? 'beside-icon' : 'below-icon'\n    });\n  };\n\n  const renderIcon = ({\n    focused\n  }) => {\n    if (icon === undefined) {\n      return null;\n    }\n\n    const activeOpacity = focused ? 1 : 0;\n    const inactiveOpacity = focused ? 0 : 1;\n    return /*#__PURE__*/React.createElement(TabBarIcon, {\n      route: route,\n      horizontal: horizontal,\n      badge: badge,\n      badgeStyle: badgeStyle,\n      activeOpacity: activeOpacity,\n      inactiveOpacity: inactiveOpacity,\n      activeTintColor: activeTintColor,\n      inactiveTintColor: inactiveTintColor,\n      renderIcon: icon,\n      style: iconStyle\n    });\n  };\n\n  const scene = {\n    route,\n    focused\n  };\n  const backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;\n  return button({\n    to,\n    onPress,\n    onLongPress,\n    testID,\n    accessibilityLabel,\n    // FIXME: accessibilityRole: 'tab' doesn't seem to work as expected on iOS\n    accessibilityRole: Platform.select({\n      ios: 'button',\n      default: 'tab'\n    }),\n    accessibilityState: {\n      selected: focused\n    },\n    // @ts-expect-error: keep for compatibility with older React Native versions\n    accessibilityStates: focused ? ['selected'] : [],\n    style: [styles.tab, {\n      backgroundColor\n    }, horizontal ? styles.tabLandscape : styles.tabPortrait, style],\n    children: /*#__PURE__*/React.createElement(React.Fragment, null, renderIcon(scene), renderLabel(scene))\n  });\n}\nconst styles = StyleSheet.create({\n  tab: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column'\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent'\n  },\n  labelBeneath: {\n    fontSize: 10\n  },\n  labelBeside: {\n    fontSize: 13,\n    marginLeft: 20,\n    marginTop: 3\n  },\n  button: {\n    display: 'flex'\n  }\n});\n//# sourceMappingURL=BottomTabItem.js.map"]},"metadata":{},"sourceType":"script"}