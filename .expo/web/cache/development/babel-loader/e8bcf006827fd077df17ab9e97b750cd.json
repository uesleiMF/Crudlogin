{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\n\nvar _DrawerPositionContext = _interopRequireDefault(require(\"../utils/DrawerPositionContext\"));\n\nvar _excluded = [\"contentContainerStyle\", \"style\", \"children\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction DrawerContentScrollView(_ref, ref) {\n  var contentContainerStyle = _ref.contentContainerStyle,\n      style = _ref.style,\n      children = _ref.children,\n      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var drawerPosition = React.useContext(_DrawerPositionContext.default);\n  var insets = (0, _reactNativeSafeAreaContext.useSafeAreaInsets)();\n  var isRight = _reactNative.I18nManager.isRTL ? drawerPosition === 'left' : drawerPosition === 'right';\n  return React.createElement(_reactNative.ScrollView, _extends({}, rest, {\n    ref: ref,\n    contentContainerStyle: [{\n      paddingTop: insets.top + 4,\n      paddingStart: !isRight ? insets.left : 0,\n      paddingEnd: isRight ? insets.right : 0\n    }, contentContainerStyle],\n    style: [styles.container, style]\n  }), children);\n}\n\nvar _default = React.forwardRef(DrawerContentScrollView);\n\nexports.default = _default;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["DrawerContentScrollView.tsx"],"names":["rest","drawerPosition","React","insets","isRight","I18nManager","paddingTop","paddingStart","paddingEnd","styles","container","flex"],"mappings":";;;;;;;;;AAAA;;AACA;;AAMA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,SAAA,uBAAA,OAAA,GAAA,EAGE;AAAA,MAFA,qBAEA,QAFA,qBAEA;AAAA,MAFA,KAEA,QAFA,KAEA;AAAA,MAFA,QAEA,QAFA,QAEA;AAAA,MAF6CA,IAE7C;AACA,MAAMC,cAAc,GAAGC,KAAK,CAALA,UAAAA,CAAvB,8BAAuBA,CAAvB;AACA,MAAMC,MAAM,GAAZ,oDAAA;AAEA,MAAMC,OAAO,GAAGC,yBAAAA,KAAAA,GACZJ,cAAc,KADFI,MAAAA,GAEZJ,cAAc,KAFlB,OAAA;AAIA,SACE,KAAA,CAAA,aAAA,CAAA,uBAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAEE,IAAA,GAAG,EAFL,GAAA;AAGE,IAAA,qBAAqB,EAAE,CACrB;AACEK,MAAAA,UAAU,EAAEH,MAAM,CAANA,GAAAA,GADd,CAAA;AAEEI,MAAAA,YAAY,EAAE,CAAA,OAAA,GAAWJ,MAAM,CAAjB,IAAA,GAFhB,CAAA;AAGEK,MAAAA,UAAU,EAAEJ,OAAO,GAAGD,MAAM,CAAT,KAAA,GAAkB;AAHvC,KADqB,EAHzB,qBAGyB,CAHzB;AAWE,IAAA,KAAK,EAAE,CAACM,MAAM,CAAP,SAAA,EAAA,KAAA;AAXT,GAAA,CAAA,EADF,QACE,CADF;AAiBD;;eAEcP,KAAK,CAALA,UAAAA,CAAf,uBAAeA,C;;;;AAEf,IAAMO,MAAM,GAAG,wBAAA,MAAA,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE;AADG;AADoB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport {\n  I18nManager,\n  ScrollView,\n  ScrollViewProps,\n  StyleSheet,\n} from 'react-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport DrawerPositionContext from '../utils/DrawerPositionContext';\n\ntype Props = ScrollViewProps & {\n  children: React.ReactNode;\n};\n\nfunction DrawerContentScrollView(\n  { contentContainerStyle, style, children, ...rest }: Props,\n  ref?: React.Ref<ScrollView>\n) {\n  const drawerPosition = React.useContext(DrawerPositionContext);\n  const insets = useSafeAreaInsets();\n\n  const isRight = I18nManager.isRTL\n    ? drawerPosition === 'left'\n    : drawerPosition === 'right';\n\n  return (\n    <ScrollView\n      {...rest}\n      ref={ref}\n      contentContainerStyle={[\n        {\n          paddingTop: insets.top + 4,\n          paddingStart: !isRight ? insets.left : 0,\n          paddingEnd: isRight ? insets.right : 0,\n        },\n        contentContainerStyle,\n      ]}\n      style={[styles.container, style]}\n    >\n      {children}\n    </ScrollView>\n  );\n}\n\nexport default React.forwardRef(DrawerContentScrollView);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}