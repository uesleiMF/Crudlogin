{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends3 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _native = require(\"@react-navigation/native\");\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _warnOnce = _interopRequireDefault(require(\"warn-once\"));\n\nvar _BottomTabView = _interopRequireDefault(require(\"../views/BottomTabView\"));\n\nvar _excluded = [\"initialRouteName\", \"backBehavior\", \"children\", \"screenListeners\", \"screenOptions\", \"sceneContainerStyle\"],\n    _excluded2 = [\"lazy\", \"tabBarOptions\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction BottomTabNavigator(_ref) {\n  var initialRouteName = _ref.initialRouteName,\n      backBehavior = _ref.backBehavior,\n      children = _ref.children,\n      screenListeners = _ref.screenListeners,\n      screenOptions = _ref.screenOptions,\n      sceneContainerStyle = _ref.sceneContainerStyle,\n      restWithDeprecated = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var lazy = restWithDeprecated.lazy,\n      tabBarOptions = restWithDeprecated.tabBarOptions,\n      rest = (0, _objectWithoutProperties2.default)(restWithDeprecated, _excluded2);\n  var defaultScreenOptions = {};\n\n  if (tabBarOptions) {\n    var _tabBarOptions$labelP;\n\n    (0, _extends3.default)(defaultScreenOptions, {\n      tabBarHideOnKeyboard: tabBarOptions.keyboardHidesTabBar,\n      tabBarActiveTintColor: tabBarOptions.activeTintColor,\n      tabBarInactiveTintColor: tabBarOptions.inactiveTintColor,\n      tabBarActiveBackgroundColor: tabBarOptions.activeBackgroundColor,\n      tabBarInactiveBackgroundColor: tabBarOptions.inactiveBackgroundColor,\n      tabBarAllowFontScaling: tabBarOptions.allowFontScaling,\n      tabBarShowLabel: tabBarOptions.showLabel,\n      tabBarLabelStyle: tabBarOptions.labelStyle,\n      tabBarIconStyle: tabBarOptions.iconStyle,\n      tabBarItemStyle: tabBarOptions.tabStyle,\n      tabBarLabelPosition: (_tabBarOptions$labelP = tabBarOptions.labelPosition) !== null && _tabBarOptions$labelP !== void 0 ? _tabBarOptions$labelP : tabBarOptions.adaptive === false ? 'below-icon' : undefined,\n      tabBarStyle: [{\n        display: tabBarOptions.tabBarVisible ? 'none' : 'flex'\n      }, defaultScreenOptions.tabBarStyle]\n    });\n    Object.keys(defaultScreenOptions).forEach(function (key) {\n      if (defaultScreenOptions[key] === undefined) {\n        delete defaultScreenOptions[key];\n      }\n    });\n    (0, _warnOnce.default)(tabBarOptions, \"Bottom Tab Navigator: 'tabBarOptions' is deprecated. Migrate the options to 'screenOptions' instead.\\n\\nPlace the following in 'screenOptions' in your code to keep current behavior:\\n\\n\" + JSON.stringify(defaultScreenOptions, null, 2) + \"\\n\\nSee https://reactnavigation.org/docs/bottom-tab-navigator#options for more details.\");\n  }\n\n  if (typeof lazy === 'boolean') {\n    defaultScreenOptions.lazy = lazy;\n    (0, _warnOnce.default)(true, \"Bottom Tab Navigator: 'lazy' in props is deprecated. Move it to 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/bottom-tab-navigator/#lazy for more details.\");\n  }\n\n  var _useNavigationBuilder = (0, _native.useNavigationBuilder)(_native.TabRouter, {\n    initialRouteName: initialRouteName,\n    backBehavior: backBehavior,\n    children: children,\n    screenListeners: screenListeners,\n    screenOptions: screenOptions,\n    defaultScreenOptions: defaultScreenOptions\n  }),\n      state = _useNavigationBuilder.state,\n      descriptors = _useNavigationBuilder.descriptors,\n      navigation = _useNavigationBuilder.navigation,\n      NavigationContent = _useNavigationBuilder.NavigationContent;\n\n  return React.createElement(NavigationContent, null, React.createElement(_BottomTabView.default, _extends({}, rest, {\n    state: state,\n    navigation: navigation,\n    descriptors: descriptors,\n    sceneContainerStyle: sceneContainerStyle\n  })));\n}\n\nvar _default = (0, _native.createNavigatorFactory)(BottomTabNavigator);\n\nexports.default = _default;","map":{"version":3,"sources":["/home/ueslei/Documentos/GitHub/Crudlogin/node_modules/@react-navigation/bottom-tabs/lib/module/navigators/createBottomTabNavigator.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","BottomTabNavigator","initialRouteName","backBehavior","children","screenListeners","screenOptions","sceneContainerStyle","restWithDeprecated","lazy","tabBarOptions","rest","defaultScreenOptions","_tabBarOptions$labelP","tabBarHideOnKeyboard","keyboardHidesTabBar","tabBarActiveTintColor","activeTintColor","tabBarInactiveTintColor","inactiveTintColor","tabBarActiveBackgroundColor","activeBackgroundColor","tabBarInactiveBackgroundColor","inactiveBackgroundColor","tabBarAllowFontScaling","allowFontScaling","tabBarShowLabel","showLabel","tabBarLabelStyle","labelStyle","tabBarIconStyle","iconStyle","tabBarItemStyle","tabStyle","tabBarLabelPosition","labelPosition","adaptive","undefined","tabBarStyle","display","tabBarVisible","keys","forEach","JSON","stringify","TabRouter","state","descriptors","navigation","NavigationContent","React","createElement","BottomTabView"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { createNavigatorFactory, TabRouter, useNavigationBuilder } from '@react-navigation/native';\nimport * as React from 'react';\nimport warnOnce from 'warn-once';\nimport BottomTabView from '../views/BottomTabView';\n\nfunction BottomTabNavigator({\n  initialRouteName,\n  backBehavior,\n  children,\n  screenListeners,\n  screenOptions,\n  sceneContainerStyle,\n  ...restWithDeprecated\n}) {\n  const {\n    // @ts-expect-error: lazy is deprecated\n    lazy,\n    // @ts-expect-error: tabBarOptions is deprecated\n    tabBarOptions,\n    ...rest\n  } = restWithDeprecated;\n  let defaultScreenOptions = {};\n\n  if (tabBarOptions) {\n    var _tabBarOptions$labelP;\n\n    Object.assign(defaultScreenOptions, {\n      tabBarHideOnKeyboard: tabBarOptions.keyboardHidesTabBar,\n      tabBarActiveTintColor: tabBarOptions.activeTintColor,\n      tabBarInactiveTintColor: tabBarOptions.inactiveTintColor,\n      tabBarActiveBackgroundColor: tabBarOptions.activeBackgroundColor,\n      tabBarInactiveBackgroundColor: tabBarOptions.inactiveBackgroundColor,\n      tabBarAllowFontScaling: tabBarOptions.allowFontScaling,\n      tabBarShowLabel: tabBarOptions.showLabel,\n      tabBarLabelStyle: tabBarOptions.labelStyle,\n      tabBarIconStyle: tabBarOptions.iconStyle,\n      tabBarItemStyle: tabBarOptions.tabStyle,\n      tabBarLabelPosition: (_tabBarOptions$labelP = tabBarOptions.labelPosition) !== null && _tabBarOptions$labelP !== void 0 ? _tabBarOptions$labelP : tabBarOptions.adaptive === false ? 'below-icon' : undefined,\n      tabBarStyle: [{\n        display: tabBarOptions.tabBarVisible ? 'none' : 'flex'\n      }, defaultScreenOptions.tabBarStyle]\n    });\n    Object.keys(defaultScreenOptions).forEach(key => {\n      if (defaultScreenOptions[key] === undefined) {\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete defaultScreenOptions[key];\n      }\n    });\n    warnOnce(tabBarOptions, `Bottom Tab Navigator: 'tabBarOptions' is deprecated. Migrate the options to 'screenOptions' instead.\\n\\nPlace the following in 'screenOptions' in your code to keep current behavior:\\n\\n${JSON.stringify(defaultScreenOptions, null, 2)}\\n\\nSee https://reactnavigation.org/docs/bottom-tab-navigator#options for more details.`);\n  }\n\n  if (typeof lazy === 'boolean') {\n    defaultScreenOptions.lazy = lazy;\n    warnOnce(true, `Bottom Tab Navigator: 'lazy' in props is deprecated. Move it to 'screenOptions' instead.\\n\\nSee https://reactnavigation.org/docs/bottom-tab-navigator/#lazy for more details.`);\n  }\n\n  const {\n    state,\n    descriptors,\n    navigation,\n    NavigationContent\n  } = useNavigationBuilder(TabRouter, {\n    initialRouteName,\n    backBehavior,\n    children,\n    screenListeners,\n    screenOptions,\n    defaultScreenOptions\n  });\n  return /*#__PURE__*/React.createElement(NavigationContent, null, /*#__PURE__*/React.createElement(BottomTabView, _extends({}, rest, {\n    state: state,\n    navigation: navigation,\n    descriptors: descriptors,\n    sceneContainerStyle: sceneContainerStyle\n  })));\n}\n\nexport default createNavigatorFactory(BottomTabNavigator);\n//# sourceMappingURL=createBottomTabNavigator.js.map"]},"metadata":{},"sourceType":"script"}